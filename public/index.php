<?php
// ==================== CORS HANDLING ====================
header('Access-Control-Allow-Origin: http://localhost:9000');
header('Access-Control-Allow-Methods: GET, POST, PUT, DELETE, OPTIONS');
header('Access-Control-Allow-Headers: Content-Type, Authorization, X-Requested-With, Accept');
header('Access-Control-Allow-Credentials: true');
header('Access-Control-Max-Age: 3600');

// Handle preflight OPTIONS request
if ($_SERVER['REQUEST_METHOD'] === 'OPTIONS') {
    http_response_code(200);
    exit();
}

// Set content type for all responses
header('Content-Type: application/json');

error_log('Request method: ' . $_SERVER['REQUEST_METHOD']);
error_log('Request URI: ' . $_SERVER['REQUEST_URI']);
error_log('Content-Type: ' . ($_SERVER['CONTENT_TYPE'] ?? 'not set'));

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $input = file_get_contents('php://input');
    error_log('Request body: ' . $input);
}

// ==================== ORIGINAL CODE ====================
spl_autoload_register(function ($class) {
    $prefix = "Src\\";

    if (!str_starts_with($class, $prefix)) {
        return;
    }

    $file = __DIR__ . "/../src/" . str_replace("\\", "/", substr($class, 4)) . ".php";

    if (file_exists($file)) {
        require $file;
    }
});
require_once __DIR__ . '/../config/db/Db.php';

use Src\Controllers\UserController;
use Src\Controllers\ProjectController;
use Src\Controllers\ProjectMembersController;
use Src\Controllers\BoardController;
use Src\Controllers\ColumnController;
use Src\Controllers\CardController;
use Src\Controllers\CommentController;
use Src\Router;

$userController = new UserController();
$projectsController = new ProjectController();
$projectMembersController = new ProjectMembersController();
$boardController = new BoardController();
$columnController = new ColumnController();
$cardController = new CardController();
$commentController = new CommentController();

$router = new Router();

//  USER
$userRoutes = require __DIR__ . '/user.php';
$userRoutes($router, $userController);

//  PROJECTS
$projectRoutes = require __DIR__ . '/projects.php';
$projectRoutes($router, $projectsController);

//  PROJECT MEMBERS
$projectMembersRoutes = require __DIR__ . '/project_members.php';
$projectMembersRoutes($router, $projectMembersController);

//  BOARDS
$boardRoutes = require __DIR__ . '/boards.php';
$boardRoutes($router, $boardController);

//  COLUMNS
$columnRoutes = require __DIR__ . '/columns.php';
$columnRoutes($router, $columnController);

//  CARDS
$cardRoutes = require __DIR__ . '/cards.php';
$cardRoutes($router, $cardController);

//  COMMENTS
$commentRoutes = require __DIR__ . '/comments.php';
$commentRoutes($router, $commentController);


// Add error handling for the router
try {
    $router->dispatch($_SERVER['REQUEST_URI']);
} catch (Exception $e) {
    http_response_code($e->getCode() ?: 500);
    echo json_encode(['error' => $e->getMessage()]);
}



function requireAuth(): int {
    session_name("PHPSESSID");
    session_start();

    if (!isset($_SESSION['id'])) {
        http_response_code(401);
        throw new Exception("Unauthorized");
    }

    return $_SESSION['id'];
}
/*

üîë Auth / Users
POST /api/register ‚Äì —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
POST /api/login ‚Äì –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è (–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–æ–∫–µ–Ω / —Å–µ—Å—Å–∏—é)
POST /api/logout
GET /api/users/me ‚Äì –ø–æ–ª—É—á–∏—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å
GET /api/users/:id ‚Äì –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ø–æ id)

üìÅ Projects
POST /api/projects ‚Äì —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç
GET /api/projects ‚Äì —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤, –≥–¥–µ —É—á–∞—Å—Ç–≤—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
GET /api/projects/:id ‚Äì –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–µ–∫—Ç –ø–æ id
PUT /api/projects/:id ‚Äì –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–µ–∫—Ç (–Ω–∞–∑–≤–∞–Ω–∏–µ/–æ–ø–∏—Å–∞–Ω–∏–µ)
DELETE /api/projects/:id ‚Äì —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ–µ–∫—Ç

üë• Project Members
POST /api/projects/:id/members ‚Äì –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø—Ä–æ–µ–∫—Ç
{ "user_id": 5 }
GET /api/projects/:id/members ‚Äì —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞
DELETE /api/projects/:id/members/:user_id ‚Äì —É–¥–∞–ª–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∏–∑ –ø—Ä–æ–µ–∫—Ç–∞

üìã Boards
POST /api/projects/:id/boards ‚Äì —Å–æ–∑–¥–∞—Ç—å –¥–æ—Å–∫—É –≤ –ø—Ä–æ–µ–∫—Ç–µ
GET /api/projects/:id/boards ‚Äì —Å–ø–∏—Å–æ–∫ –¥–æ—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–∞
GET /api/boards/:id ‚Äì –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å–∫—É –ø–æ id
PUT /api/boards/:id ‚Äì –æ–±–Ω–æ–≤–∏—Ç—å –¥–æ—Å–∫—É (–Ω–∞–∑–≤–∞–Ω–∏–µ)
DELETE /api/boards/:id ‚Äì —É–¥–∞–ª–∏—Ç—å –¥–æ—Å–∫—É

üóÇ Columns
POST /api/boards/:id/columns ‚Äì —Å–æ–∑–¥–∞—Ç—å –∫–æ–ª–æ–Ω–∫—É –≤ –¥–æ—Å–∫–µ
GET /api/boards/:id/columns ‚Äì —Å–ø–∏—Å–æ–∫ –∫–æ–ª–æ–Ω–æ–∫ –≤ –¥–æ—Å–∫–µ
PUT /api/columns/:id ‚Äì –æ–±–Ω–æ–≤–∏—Ç—å –∫–æ–ª–æ–Ω–∫—É (–Ω–∞–∑–≤–∞–Ω–∏–µ, position)
DELETE /api/columns/:id ‚Äì —É–¥–∞–ª–∏—Ç—å –∫–æ–ª–æ–Ω–∫—É

üìù Cards
POST /api/columns/:id/cards ‚Äì —Å–æ–∑–¥–∞—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É –≤ –∫–æ–ª–æ–Ω–∫–µ
{ "title": "Fix bug", "description": "‚Ä¶" }
GET /api/columns/:id/cards ‚Äì —Å–ø–∏—Å–æ–∫ –∫–∞—Ä—Ç–æ—á–µ–∫ –≤ –∫–æ–ª–æ–Ω–∫–µ
GET /api/cards/:id ‚Äì –ø–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É
PUT /api/cards/:id ‚Äì –æ–±–Ω–æ–≤–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É (title, description, column_id, position)
DELETE /api/cards/:id ‚Äì —É–¥–∞–ª–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É

üí¨ Comments
POST /api/cards/:id/comments ‚Äì –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
{ "content": "–ü–æ—Ñ–∏–∫—Å–∏–ª –±–∞–≥ üëç" }
GET /api/cards/:id/comments ‚Äì —Å–ø–∏—Å–æ–∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∫ –∫–∞—Ä—Ç–æ—á–∫–µ
DELETE /api/comments/:id ‚Äì —É–¥–∞–ª–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
 */