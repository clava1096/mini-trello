<?php
spl_autoload_register(function ($class) {
    $prefix = "Src\\";

    if (!str_starts_with($class, $prefix)) {
        return;
    }

    $file = __DIR__ . "/../src/" . str_replace("\\", "/", substr($class, 4)) . ".php";

    if (file_exists($file)) {
        require $file;
    }
});
require_once __DIR__ . '/../config/db/Db.php';

use Src\Controllers\UserController;
use Src\Controllers\ProjectController;
use Src\DTO\User\UserCreateDto;
use Src\DTO\User\UserLoginDto;
use Src\Router;


$userController = new UserController();
$projectsController = new ProjectController();

$router = new Router();

// USER:
{
    // POST api/user/register + json
    $router->addRoute('POST', 'api/user/register', function() use ($userController) {
        $json = file_get_contents('php://input');
        $dto = UserCreateDto::fromJson($json);

        if (!empty($dto->validate())) {
            return $dto;
        }

        return $userController->createUser($dto);
    });

    // POST api/user/login + json
    $router->addRoute('POST', 'api/user/login', function() use ($userController) {
        $json = file_get_contents('php://input');
        $dto = UserLoginDto::fromJson($json);

        if (!empty($dto->validate())) {
            return $dto;
        }

        return $userController->authUser($dto);
    });

    // GET api/user/me
    $router->addRoute('GET', 'api/user/me', function() use ($userController) {
        $userId = requireAuth();
        return $userController->getUser($userId);
    });

    // GET api/user/{id}
    $router->addRoute('GET', 'api/user/{id}', function($id) use ($userController) {
        requireAuth();
        return $userController->getUser($id);
    });

    // POST api/user/logout
    $router->addRoute('POST', 'api/user/logout', fn() => $userController->logout());

}

// PROJECTS:
{
    // POST /api/projects ‚Äì —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç
    $router->addRoute('POST', '/api/projects', function() use ($projectsController) {

    });

    //GET /api/projects ‚Äì —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤, –≥–¥–µ —É—á–∞—Å—Ç–≤—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    $router->addRoute('POST', '/api/projects', function() use ($projectsController) {
        $userId = requireAuth();
        return $projectsController->getProjects($userId);
    });

    //GET /api/projects/:id ‚Äì –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–µ–∫—Ç –ø–æ id
    $router->addRoute('POST', '/api/projects/{id}', function($id) use ($projectsController) {
        requireAuth();
        return $projectsController->getProject($id);
    });

    //PUT /api/projects/:id ‚Äì –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–µ–∫—Ç (–Ω–∞–∑–≤–∞–Ω–∏–µ/–æ–ø–∏—Å–∞–Ω–∏–µ)
    $router->addRoute('GET', 'api/projects/{id}', function($id) use ($projectsController) {
        requireAuth();
        return $projectsController->getProject($id);
    });
    //DELETE /api/projects/:id ‚Äì —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ–µ–∫—Ç
    $router->addRoute('DELETE', 'api/projects/{id}', function($id) use ($projectsController) {
        requireAuth();
        return $projectsController->deleteProject($id);
    });
}

// PROJECT MEMBERS:
{

}
$router->dispatch($_SERVER['REQUEST_URI']);



function requireAuth(): int {
    session_name("PHPSESSID"); // –∏–ª–∏ "HTTPSESSION", –µ—Å–ª–∏ —Ç—ã —Å–º–µ–Ω–∏–ª –∏–º—è
    session_start();

    if (!isset($_SESSION['id'])) {
        http_response_code(401);
        echo json_encode(["error" => "Unauthorized"]);
        exit; // –∑–∞–≤–µ—Ä—à–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
    }

    return $_SESSION['id']; // –º–æ–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
}
/*
 * –Ω–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ—é —Å–∏—Å—Ç–µ–º—É id
 *
üîë Auth / Users
POST /api/register ‚Äì —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
POST /api/login ‚Äì –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è (–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–æ–∫–µ–Ω / —Å–µ—Å—Å–∏—é)
POST /api/logout
GET /api/users/me ‚Äì –ø–æ–ª—É—á–∏—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å
GET /api/users/:id ‚Äì –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ø–æ id)

üìÅ Projects
POST /api/projects ‚Äì —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç
GET /api/projects ‚Äì —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤, –≥–¥–µ —É—á–∞—Å—Ç–≤—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
GET /api/projects/:id ‚Äì –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–µ–∫—Ç –ø–æ id
PUT /api/projects/:id ‚Äì –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–µ–∫—Ç (–Ω–∞–∑–≤–∞–Ω–∏–µ/–æ–ø–∏—Å–∞–Ω–∏–µ)
DELETE /api/projects/:id ‚Äì —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ–µ–∫—Ç

üë• Project Members
POST /api/projects/:id/members ‚Äì –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø—Ä–æ–µ–∫—Ç
{ "user_id": 5 }
GET /api/projects/:id/members ‚Äì —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞
DELETE /api/projects/:id/members/:user_id ‚Äì —É–¥–∞–ª–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∏–∑ –ø—Ä–æ–µ–∫—Ç–∞

üìã Boards
POST /api/projects/:id/boards ‚Äì —Å–æ–∑–¥–∞—Ç—å –¥–æ—Å–∫—É –≤ –ø—Ä–æ–µ–∫—Ç–µ
GET /api/projects/:id/boards ‚Äì —Å–ø–∏—Å–æ–∫ –¥–æ—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–∞
GET /api/boards/:id ‚Äì –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å–∫—É –ø–æ id
PUT /api/boards/:id ‚Äì –æ–±–Ω–æ–≤–∏—Ç—å –¥–æ—Å–∫—É (–Ω–∞–∑–≤–∞–Ω–∏–µ)
DELETE /api/boards/:id ‚Äì —É–¥–∞–ª–∏—Ç—å –¥–æ—Å–∫—É

üóÇ Columns
POST /api/boards/:id/columns ‚Äì —Å–æ–∑–¥–∞—Ç—å –∫–æ–ª–æ–Ω–∫—É –≤ –¥–æ—Å–∫–µ
GET /api/boards/:id/columns ‚Äì —Å–ø–∏—Å–æ–∫ –∫–æ–ª–æ–Ω–æ–∫ –≤ –¥–æ—Å–∫–µ
PUT /api/columns/:id ‚Äì –æ–±–Ω–æ–≤–∏—Ç—å –∫–æ–ª–æ–Ω–∫—É (–Ω–∞–∑–≤–∞–Ω–∏–µ, position)
DELETE /api/columns/:id ‚Äì —É–¥–∞–ª–∏—Ç—å –∫–æ–ª–æ–Ω–∫—É

üìù Cards
POST /api/columns/:id/cards ‚Äì —Å–æ–∑–¥–∞—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É –≤ –∫–æ–ª–æ–Ω–∫–µ
{ "title": "Fix bug", "description": "‚Ä¶" }
GET /api/columns/:id/cards ‚Äì —Å–ø–∏—Å–æ–∫ –∫–∞—Ä—Ç–æ—á–µ–∫ –≤ –∫–æ–ª–æ–Ω–∫–µ
GET /api/cards/:id ‚Äì –ø–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É
PUT /api/cards/:id ‚Äì –æ–±–Ω–æ–≤–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É (title, description, column_id, position)
DELETE /api/cards/:id ‚Äì —É–¥–∞–ª–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É

üí¨ Comments
POST /api/cards/:id/comments ‚Äì –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
{ "content": "–ü–æ—Ñ–∏–∫—Å–∏–ª –±–∞–≥ üëç" }
GET /api/cards/:id/comments ‚Äì —Å–ø–∏—Å–æ–∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∫ –∫–∞—Ä—Ç–æ—á–∫–µ
DELETE /api/comments/:id ‚Äì —É–¥–∞–ª–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
 */
